quarkus.http.port=8077
quarkus.http.test-port=8087



# configure your datasource
%prod.quarkus.datasource.db-kind=postgresql
# Inserted from docker-compose
%prod.quarkus.datasource.username=${QUARKUS_DATASOURCE_USERNAME}
%prod.quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD}
%prod.quarkus.datasource.reactive.url=${QUARKUS_DATASOURCE_REACTIVE_URL}


# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create

# include swagger in prod
quarkus.swagger-ui.always-include=true

# kafka
mp.messaging.outgoing.baggage-state-change.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# Opentelemetry

%prod.quarkus.otel.exporter.otlp.traces.endpoint=${QUARKUS_OTEL_ENDPOINT}

# Authentication
# TODO enable http basic auth
quarkus.http.auth.basic=true